# -*- coding: utf-8 -*-
"""Raja_Ampat_Pollution_News-Speech_Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qwVsaQM1tzN_UKiFfLqaQ61xegLt7C-T

# Transcribing Audio with Google Web Speech API

# Importing the Relevant Libraries
"""

!pip install SpeechRecognition

!pip install jiwer

!pip install -U openai-whisper

!pip install gTTS

import numpy as np
import matplotlib.pyplot as plt

import librosa
import librosa.display
import soundfile as sf
import speech_recognition as sr

from jiwer import wer, cer
from IPython.display import Audio

import whisper

import csv
import os
import tempfile
import wave

from gtts import gTTS

import warnings
warnings.filterwarnings("ignore", category=FutureWarning)

"""# Loading and Visualizing an Audio File"""

audio_signal, sample_rate = librosa.load('news.wav', sr=None)

sample_rate

plt.figure(figsize=(12, 4))
librosa.display.waveshow(audio_signal, sr=sample_rate)
plt.title('Waveform')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.show()

# Play the audio in the notebook
Audio('news.wav')

"""# Transcribing Audio with Google Web Speech API"""

recognizer = sr.Recognizer()

file_path = 'news.wav'

def transcribe_audio(file_path):
    with sr.AudioFile(file_path) as source:
        audio_data = recognizer.record(source)
        text = recognizer.recognize_google(audio_data)
        print(text)
        return text
transcribed_text = transcribe_audio(file_path)

ground_truth = """
The Minister of Environment and Forestry, Hanif Faisol Nurofiq, revealed environmental damage caused by mining in four locations in Raja Ampat managed by PT GN, PT ASP, PT KSM, and PT MRP. Especially on Manuran Island, managed by PT ASP, serious damage was found such as pollution and cloudy water along the coast caused by a breach in the mining settling pond. PT ASP also lacks proper environmental management, and the environmental approval document issued by the Regent of Raja Ampat has not yet been submitted to the Ministry of Environment and Forestry.

On Gag Island, mining by PT GN complies relatively well with environmental standards, with damage considered not too serious. However, further data collection is needed because sedimentation has already covered coral reefs, which are important marine habitats.

On Kawei Island, PT KSM opened land exceeding their permit by around 5 hectares, violating environmental approval. Meanwhile, PT MRP, managing Manyaifun Island and Batang Pele Island, is still in the exploration phase, which has been temporarily halted by the Ministry.

Minister Hanif emphasized that environmental permits for mining in Raja Ampat will be reviewed, especially if the technology for environmental management and rehabilitation is inadequate. Law enforcement has been carried out with sealing of mining sites on Manuran Island.

In summary, there is indication of serious environmental pollution and damage on Manuran Island, conditions on Gag Island are better, but overall stricter supervision and evaluation of mining permits in Raja Ampat are needed.
"""

calculated_wer = wer(ground_truth, transcribed_text)
calculated_cer = cer(ground_truth, transcribed_text)
print(f"Word Error Rate (WER): {calculated_wer:.4f}")
print(f"Character Error Rate (CER): {calculated_cer:.4f}")

#WER (Word Error Rate) and CER (Character Error Rate) are measures used to evaluate the accuracy of speech recognition or text transcription systems.

#The values (WER: 0.7459, CER: 0.6685) indicate a high error rate, meaning the transcription or recognition contains many mistakes at both the word and character levels.

"""# Background Noise and Spectrograms"""

plt.figure(figsize=(12, 4))
librosa.display.waveshow(audio_signal, sr=sample_rate)
plt.title('Waveform')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.show()

# Play the audio in the notebook
Audio('news.wav')

# Compute the spectrogram
S = librosa.stft(audio_signal)

S_dB = librosa.amplitude_to_db(abs(S), ref=np.max)

np.max(S_dB)

# Plot the spectrogram
plt.figure(figsize=(12, 4))
librosa.display.specshow(data = S_dB, sr=sample_rate, x_axis='time', y_axis='log')
plt.colorbar(format='%+2.0f dB')
plt.title('Spectrogram')
plt.xlabel('Time')
plt.ylabel('Frequency')
plt.show()

signal_filtered = librosa.effects.preemphasis(audio_signal, coef=0.97)
sf.write('filtered_speech_01.wav', signal_filtered, sample_rate)
output_file = 'filtered_speech_01.wav'

# Play the original audio file
print("Playing original audio:")
Audio(file_path)

# Play the filtered audio file
print("Playing filtered audio:")
Audio(output_file)

# Compute the spectrogram
Sb = librosa.stft(signal_filtered)

S_dBb = librosa.amplitude_to_db(abs(Sb), ref=np.max)

# Plot the spectrogram
plt.figure(figsize=(12, 4))
librosa.display.specshow(data = S_dBb, sr=sample_rate, x_axis='time', y_axis='log')
plt.colorbar(format='%+2.0f dB')
plt.title('Spectrogram')
plt.xlabel('Time')
plt.ylabel('Frequency')
plt.show()

transcribed_text_preemphasis = transcribe_audio('filtered_speech_01.wav')

calculated_wer = wer(ground_truth, transcribed_text_preemphasis)
calculated_cer = cer(ground_truth, transcribed_text_preemphasis)
print(f"Word Error Rate (WER): {calculated_wer:.4f}")
print(f"Character Error Rate (CER): {calculated_cer:.4f}")

#Both WER and CER have decreased slightly in the second set (WER from 0.7459 to 0.7254, CER from 0.6685 to 0.6547), indicating a small improvement in accuracy.

"""# Transciribing Audio with OpenAI's Whisper"""

model = whisper.load_model("base")

result = model.transcribe(file_path)

transcribed_text_whisper = result["text"]
transcribed_text_whisper

result["language"]

calculated_wer = wer(ground_truth, transcribed_text_whisper)
calculated_cer = cer(ground_truth, transcribed_text_whisper)
print(f"Word Error Rate (WER): {calculated_wer:.4f}")
print(f"Character Error Rate (CER): {calculated_cer:.4f}")

#The latest WER (0.2869) and CER (0.0917) are much lower than the earlier values (WER ~0.72 and CER ~0.65), showing a significant improvement in accuracy.

#This means the transcription or recognition is now far more accurate, with fewer errors at both the word and character levels.